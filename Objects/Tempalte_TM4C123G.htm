<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Tempalte_TM4C123G.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Tempalte_TM4C123G.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Jul 18 11:20:04 2024
<BR><P>
<H3>Maximum Stack Usage =        248 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Loop_20Hz &rArr; OLED_CONTROL &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[8]">Reset_Handler</a>
 <LI><a href="#[9]">NmiSR</a>
 <LI><a href="#[a]">FaultISR</a>
 <LI><a href="#[b]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SysCtlDelay</a><BR>
 <LI><a href="#[9]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">NmiSR</a><BR>
 <LI><a href="#[a]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">FaultISR</a><BR>
 <LI><a href="#[b]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[a]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[b]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 115 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1]">Loop_100Hz</a> from scheduler.o(i.Loop_100Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[4]">Loop_10Hz</a> from scheduler.o(i.Loop_10Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[7]">Loop_1Hz</a> from scheduler.o(i.Loop_1Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[3]">Loop_20Hz</a> from scheduler.o(i.Loop_20Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[6]">Loop_2Hz</a> from scheduler.o(i.Loop_2Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[2]">Loop_50Hz</a> from scheduler.o(i.Loop_50Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[5]">Loop_5Hz</a> from scheduler.o(i.Loop_5Hz) referenced 2 times from scheduler.o(.data)
 <LI><a href="#[9]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[8]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from sys_user.o(i.SysTick_Handler) referenced from sys_user.o(i.SysTick_Init)
 <LI><a href="#[c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[53]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[54]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[55]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[56]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[57]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[58]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[59]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[11]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[13]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[10]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>FPUEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPUEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[50]"></a>FPULazyStackingEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPULazyStackingEnable))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[17]"></a>GPIODirModeSet</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[18]"></a>GPIOPadConfigSet</STRONG> (Thumb, 380 bytes, Stack size 36 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[16]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_PIN_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_SendByte
</UL>

<P><STRONG><a name="[19]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_PIN_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SPI_PIN_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_PIN_Init
</UL>

<P><STRONG><a name="[1a]"></a>GPIOPinTypeGPIOOutputOD</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutputOD))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_SendByte
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
</UL>

<P><STRONG><a name="[1c]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
</UL>

<P><STRONG><a name="[1b]"></a>GPIO_WritePin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio_user.o(i.GPIO_WritePin))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_PIN_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SPI_PIN_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_PIN_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_TogglePin
</UL>

<P><STRONG><a name="[1d]"></a>Get_TickMs</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sys_user.o(i.Get_TickMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Get_TickMs &rArr; Get_TickUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickUs
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Setup
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Run
</UL>

<P><STRONG><a name="[1e]"></a>Get_TickUs</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sys_user.o(i.Get_TickUs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_TickUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickValueGet
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodGet
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CONTROL
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickMs
</UL>

<P><STRONG><a name="[22]"></a>Hardware_I2C_Mem_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, i2c_user.o(i.Hardware_I2C_Mem_Write))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mem_Write
</UL>

<P><STRONG><a name="[39]"></a>Hardware_SPI_Transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, spi_user.o(i.Hardware_SPI_Transmit))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>

<P><STRONG><a name="[21]"></a>I2C_Mem_Write</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, i2c_user.o(i.I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Mem_Write
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
</UL>

<P><STRONG><a name="[4f]"></a>IntPriorityGroupingSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, interrupt.o(i.IntPriorityGroupingSet))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[48]"></a>IntRegister</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, interrupt.o(i.IntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IntRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntRegister
</UL>

<P><STRONG><a name="[24]"></a>LED_PIN_Init</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, led.o(i.LED_PIN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LED_PIN_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>

<P><STRONG><a name="[26]"></a>LED_TogglePin</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, led.o(i.LED_TogglePin))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_2Hz
</UL>

<P><STRONG><a name="[27]"></a>LED_init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tempalte.o(i.LED_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LED_init &rArr; LED_PIN_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_PIN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
</UL>

<P><STRONG><a name="[29]"></a>OLED1_I2C_INIT</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tempalte.o(i.OLED1_I2C_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = OLED1_I2C_INIT &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Update
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
</UL>

<P><STRONG><a name="[2c]"></a>OLED2_SPI_INIT</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tempalte.o(i.OLED2_SPI_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = OLED2_SPI_INIT &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Update
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SPI_PIN_Init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
</UL>

<P><STRONG><a name="[28]"></a>OLED_CONTROL</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, tempalte.o(i.OLED_CONTROL))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = OLED_CONTROL &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Update
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickUs
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_20Hz
</UL>

<P><STRONG><a name="[2f]"></a>OLED_Clear</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, oled.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OLED_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[37]"></a>OLED_ClearArea</STRONG> (Thumb, 212 bytes, Stack size 36 bytes, oled.o(i.OLED_ClearArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OLED_ClearArea
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[2a]"></a>OLED_Init</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = OLED_Init &rArr; OLED_WriteCommand &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED2_SPI_INIT
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED1_I2C_INIT
</UL>

<P><STRONG><a name="[36]"></a>OLED_Pow</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oled.o(i.OLED_Pow))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[2d]"></a>OLED_SPI_PIN_Init</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, oled.o(i.OLED_SPI_PIN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_SPI_PIN_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED2_SPI_INIT
</UL>

<P><STRONG><a name="[33]"></a>OLED_SetCursor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, oled.o(i.OLED_SetCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Update
</UL>

<P><STRONG><a name="[34]"></a>OLED_ShowChar</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, oled.o(i.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = OLED_ShowChar &rArr; OLED_ShowImage
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowImage
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[35]"></a>OLED_ShowImage</STRONG> (Thumb, 562 bytes, Stack size 84 bytes, oled.o(i.OLED_ShowImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = OLED_ShowImage
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[2e]"></a>OLED_ShowNum</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, oled.o(i.OLED_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_ShowImage
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ClearArea
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CONTROL
</UL>

<P><STRONG><a name="[2b]"></a>OLED_Update</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, oled.o(i.OLED_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED2_SPI_INIT
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED1_I2C_INIT
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CONTROL
</UL>

<P><STRONG><a name="[30]"></a>OLED_WriteCommand</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, oled.o(i.OLED_WriteCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = OLED_WriteCommand &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[38]"></a>OLED_WriteData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, oled.o(i.OLED_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = OLED_WriteData &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Update
</UL>

<P><STRONG><a name="[32]"></a>SPI_Transmit</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, spi_user.o(i.SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SPI_Transmit &rArr; Software_SPI_Transmit &rArr; Software_SPI_SwapByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_Transmit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Mem_Write
</UL>

<P><STRONG><a name="[3b]"></a>Scheduler_Run</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, scheduler.o(i.Scheduler_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Scheduler_Run &rArr; Get_TickMs &rArr; Get_TickUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickMs
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_while
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>Scheduler_Setup</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scheduler.o(i.Scheduler_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Scheduler_Setup &rArr; Get_TickMs &rArr; Get_TickUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickMs
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>Software_I2C1_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c_user.o(i.Software_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Software_I2C1_Init &rArr; Software_I2C_Init &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
</UL>

<P><STRONG><a name="[3f]"></a>Software_I2C_Init</STRONG> (Thumb, 406 bytes, Stack size 56 bytes, i2c_user.o(i.Software_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Software_I2C_Init &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_SendByte
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickUs
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C1_Init
</UL>

<P><STRONG><a name="[23]"></a>Software_I2C_Mem_Write</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, i2c_user.o(i.Software_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Stop
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Start
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mem_Write
</UL>

<P><STRONG><a name="[40]"></a>Software_I2C_SendByte</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, i2c_user.o(i.Software_I2C_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutputOD
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Mem_Write
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
</UL>

<P><STRONG><a name="[41]"></a>Software_I2C_Start</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, i2c_user.o(i.Software_I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Software_I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Mem_Write
</UL>

<P><STRONG><a name="[42]"></a>Software_I2C_Stop</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, i2c_user.o(i.Software_I2C_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Mem_Write
</UL>

<P><STRONG><a name="[43]"></a>Software_SPI1_Init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, spi_user.o(i.Software_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Software_SPI1_Init &rArr; Software_SPI_PIN_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_PIN_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
</UL>

<P><STRONG><a name="[44]"></a>Software_SPI_PIN_Init</STRONG> (Thumb, 376 bytes, Stack size 40 bytes, spi_user.o(i.Software_SPI_PIN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Software_SPI_PIN_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI1_Init
</UL>

<P><STRONG><a name="[45]"></a>Software_SPI_SwapByte</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, spi_user.o(i.Software_SPI_SwapByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Software_SPI_SwapByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_Transmit
</UL>

<P><STRONG><a name="[3a]"></a>Software_SPI_Transmit</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, spi_user.o(i.Software_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Software_SPI_Transmit &rArr; Software_SPI_SwapByte
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_SwapByte
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
</UL>

<P><STRONG><a name="[4a]"></a>SysCtlClockGet</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[46]"></a>SysCtlClockSet</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockSet
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[25]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI_PIN_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SPI_PIN_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_PIN_Init
</UL>

<P><STRONG><a name="[4d]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[4c]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[47]"></a>SysTickIntRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systick.o(i.SysTickIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTickIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[20]"></a>SysTickPeriodGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodGet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickUs
</UL>

<P><STRONG><a name="[4b]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[1f]"></a>SysTickValueGet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, systick.o(i.SysTickValueGet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TickUs
</UL>

<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys_user.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> sys_user.o(i.SysTick_Init)
</UL>
<P><STRONG><a name="[49]"></a>SysTick_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sys_user.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTick_Init &rArr; SysTickIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntRegister
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[4e]"></a>System_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sys_user.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = System_Init &rArr; SysTick_Init &rArr; SysTickIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockSet
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntPriorityGroupingSet
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPULazyStackingEnable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPUEnable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>Tempalte_HW_INIT</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tempalte.o(i.Tempalte_HW_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Tempalte_HW_INIT &rArr; OLED2_SPI_INIT &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_SPI1_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Software_I2C1_Init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED2_SPI_INIT
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED1_I2C_INIT
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[63]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[c]"></a>main</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; Tempalte_HW_INIT &rArr; OLED2_SPI_INIT &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tempalte_HW_INIT
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Setup
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>Loop_100Hz</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_100Hz))
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>Loop_10Hz</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_10Hz))
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>Loop_1Hz</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_1Hz))
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>Loop_20Hz</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scheduler.o(i.Loop_20Hz))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Loop_20Hz &rArr; OLED_CONTROL &rArr; OLED_Update &rArr; OLED_SetCursor &rArr; OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CONTROL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Loop_2Hz</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scheduler.o(i.Loop_2Hz))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_TogglePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>Loop_50Hz</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_50Hz))
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>Loop_5Hz</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_5Hz))
<BR>[Address Reference Count : 1]<UL><LI> scheduler.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>Loop_while</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Loop_while))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scheduler_Run
</UL>

<P><STRONG><a name="[31]"></a>OLED_Mem_Write</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, oled.o(i.OLED_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = OLED_Mem_Write &rArr; I2C_Mem_Write &rArr; Software_I2C_Mem_Write &rArr; Software_I2C_SendByte &rArr; GPIOPinTypeGPIOOutputOD &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Transmit
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePin
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteCommand
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetCursor
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
